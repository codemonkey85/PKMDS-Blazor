@inherits BasePkmdsComponent

@if (Pokemon is not null &&
     AppState.SaveFile is
     {
         Context: not
         (EntityContext.None or
         EntityContext.SplitInvalid or
         EntityContext.MaxInvalid),
         Generation: var saveGeneration
     } &&
     AppState.SelectedSlotsAreValid)
{
    <MudGrid>

        <MudItem xs="3">
            <MudStack>
                <MudText>
                    Base
                </MudText>

                <MudNumericField Label="HP"
                                 title="HP Base Stat"
                                 Variant="@Variant.Outlined"
                                 Value="@Pokemon.PersonalInfo.HP"
                                 ReadOnly
                                 HideSpinButtons/>

                <MudNumericField Label="Atk"
                                 Class="@GetStatClass(Stats.Attack)"
                                 title="Attack Base Stat"
                                 Variant="@Variant.Outlined"
                                 Value="@Pokemon.PersonalInfo.ATK"
                                 ReadOnly
                                 HideSpinButtons/>

                <MudNumericField Label="Def"
                                 Class="@GetStatClass(Stats.Defense)"
                                 title="Defense Base Stat"
                                 Variant="@Variant.Outlined"
                                 Value="@Pokemon.PersonalInfo.DEF"
                                 ReadOnly
                                 HideSpinButtons/>

                @if (saveGeneration == 1 && Pokemon is PK1 pk1)
                {
                    <MudNumericField Label="Spe"
                                     title="Speed Base Stat"
                                     Variant="@Variant.Outlined"
                                     Value="@pk1.PersonalInfo.SPE"
                                     ReadOnly
                                     HideSpinButtons/>

                    <MudNumericField Label="Spc"
                                     title="Special Base Stat"
                                     Variant="@Variant.Outlined"
                                     Value="@pk1.PersonalInfo.SPC"
                                     ReadOnly
                                     HideSpinButtons/>
                }
                else
                {
                    <MudNumericField Label="Spa"
                                     Class="@GetStatClass(Stats.SpecialAttack)"
                                     title="Special Attack Base Stat"
                                     Variant="@Variant.Outlined"
                                     Value="@Pokemon.PersonalInfo.SPA"
                                     ReadOnly
                                     HideSpinButtons/>

                    <MudNumericField Label="Spd"
                                     Class="@GetStatClass(Stats.SpecialDefense)"
                                     title="Special Defense Base Stat"
                                     Variant="@Variant.Outlined"
                                     Value="@Pokemon.PersonalInfo.SPD"
                                     ReadOnly
                                     HideSpinButtons/>

                    <MudNumericField Label="Spe"
                                     Class="@GetStatClass(Stats.Speed)"
                                     title="Speed Base Stat"
                                     Variant="@Variant.Outlined"
                                     Value="@Pokemon.PersonalInfo.SPE"
                                     ReadOnly
                                     HideSpinButtons/>

                    <MudNumericField Label="Sum"
                                     title="Base Stat Total"
                                     Variant="@Variant.Outlined"
                                     Value="@Pokemon.PersonalInfo.GetBaseStatTotal()"
                                     ReadOnly
                                     HideSpinButtons/>
                }

            </MudStack>
        </MudItem>

        <MudItem xs="3">
            <MudStack>
                <MudText>
                    IVs
                </MudText>

                <MudNumericField Label="HP"
                                 title="HP IV"
                                 Variant="@Variant.Outlined"
                                 Min="@int.MinValue"
                                 Max="@(saveGeneration == 1 && Pokemon is PK1
                                          ? 15
                                          : 31)"
                                 Value="@Pokemon.IV_HP"
                                 ValueChanged="@((int newValue) => OnSetIv(Stats.HP, newValue))"
                                 For="@(() => Pokemon.IV_HP)"
                                 ReadOnly="@(saveGeneration == 1 && Pokemon is PK1)"
                                 HideSpinButtons="@(saveGeneration == 1 && Pokemon is PK1)"/>

                <MudNumericField Label="Atk"
                                 Class="@GetStatClass(Stats.Attack)"
                                 title="Attack IV"
                                 Variant="@Variant.Outlined"
                                 Min="@int.MinValue"
                                 Max="@(saveGeneration == 1 && Pokemon is PK1
                                          ? 15
                                          : 31)"
                                 Value="@Pokemon.IV_ATK"
                                 ValueChanged="@((int newValue) => OnSetIv(Stats.Attack, newValue))"
                                 For="@(() => Pokemon.IV_ATK)"/>

                <MudNumericField Label="Def"
                                 Class="@GetStatClass(Stats.Defense)"
                                 title="Defense IV"
                                 Variant="@Variant.Outlined"
                                 Min="@int.MinValue"
                                 Max="@(saveGeneration == 1 && Pokemon is PK1
                                          ? 15
                                          : 31)"
                                 Value="@Pokemon.IV_DEF"
                                 ValueChanged="@((int newValue) => OnSetIv(Stats.Defense, newValue))"
                                 For="@(() => Pokemon.IV_DEF)"/>


                @if (saveGeneration == 1 && Pokemon is PK1 pk1)
                {
                    <MudNumericField Label="Spe"
                                     title="Speed IV"
                                     Variant="@Variant.Outlined"
                                     Min="@int.MinValue"
                                     Max="15"
                                     Value="@pk1.IV_SPE"
                                     ValueChanged="@((int newValue) => OnSetDv(Stats.Speed, newValue))"
                                     For="@(() => pk1.IV_SPE)"/>

                    <MudNumericField Label="Spc"
                                     title="Special IV"
                                     Variant="@Variant.Outlined"
                                     Min="@int.MinValue"
                                     Max="15"
                                     Value="@pk1.IV_SPC"
                                     ValueChanged="@((int newValue) => OnSetDv(Stats.Special, newValue))"
                                     For="@(() => pk1.IV_SPC)"/>
                }
                else
                {
                    <MudNumericField Label="Spa"
                                     Class="@GetStatClass(Stats.SpecialAttack)"
                                     title="Special Attack IV"
                                     Variant="@Variant.Outlined"
                                     Min="@int.MinValue"
                                     Max="@(saveGeneration == 1 && Pokemon is PK1
                                              ? 15
                                              : 31)"
                                     Value="@Pokemon.IV_SPA"
                                     ValueChanged="@((int newValue) => OnSetIv(Stats.SpecialAttack, newValue))"
                                     For="@(() => Pokemon.IV_SPA)"/>

                    <MudNumericField Label="Spd"
                                     Class="@GetStatClass(Stats.SpecialDefense)"
                                     title="Special Defense IV"
                                     Variant="@Variant.Outlined"
                                     Min="@int.MinValue"
                                     Max="@(saveGeneration == 1 && Pokemon is PK1
                                              ? 15
                                              : 31)"
                                     Value="@Pokemon.IV_SPD"
                                     ValueChanged="@((int newValue) => OnSetIv(Stats.SpecialDefense, newValue))"
                                     For="@(() => Pokemon.IV_SPD)"/>

                    <MudNumericField Label="Spe"
                                     Class="@GetStatClass(Stats.Speed)"
                                     title="Speed IV"
                                     Variant="@Variant.Outlined"
                                     Min="@int.MinValue"
                                     Max="@(saveGeneration == 1 && Pokemon is PK1
                                              ? 15
                                              : 31)"
                                     Value="@Pokemon.IV_SPE"
                                     ValueChanged="@((int newValue) => OnSetIv(Stats.Speed, newValue))"
                                     For="@(() => Pokemon.IV_SPE)"/>

                    <MudNumericField Label="Sum"
                                     title="IVs Total"
                                     Variant="@Variant.Outlined"
                                     Value="@Pokemon.IVTotal"
                                     For="@(() => Pokemon.IVTotal)"
                                     ReadOnly
                                     HideSpinButtons/>
                }

            </MudStack>
        </MudItem>

        @if (Pokemon is IAwakened aPkm)
        {
            <MudItem xs="3">
                <MudStack>
                    <MudText>
                        AVs
                    </MudText>

                    <MudNumericField Label="HP"
                                     T="@byte"
                                     title="HP AV"
                                     Variant="@Variant.Outlined"
                                     Min="@byte.MinValue"
                                     Max="@AwakeningUtil.AwakeningMax"
                                     @bind-Value="@aPkm.AV_HP"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => aPkm.AV_HP)"/>

                    <MudNumericField Label="Atk"
                                     Class="@GetStatClass(Stats.Attack)"
                                     T="@byte"
                                     title="Attack AV"
                                     Variant="@Variant.Outlined"
                                     Min="@byte.MinValue"
                                     Max="@AwakeningUtil.AwakeningMax"
                                     @bind-Value="@aPkm.AV_ATK"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => aPkm.AV_ATK)"/>

                    <MudNumericField Label="Def"
                                     Class="@GetStatClass(Stats.Defense)"
                                     T="@byte"
                                     title="Defense AV"
                                     Variant="@Variant.Outlined"
                                     Min="@byte.MinValue"
                                     Max="@AwakeningUtil.AwakeningMax"
                                     @bind-Value="@aPkm.AV_DEF"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => aPkm.AV_DEF)"/>

                    <MudNumericField Label="Spa"
                                     Class="@GetStatClass(Stats.SpecialAttack)"
                                     T="@byte"
                                     title="Special Attack AV"
                                     Variant="@Variant.Outlined"
                                     Min="@byte.MinValue"
                                     Max="@AwakeningUtil.AwakeningMax"
                                     @bind-Value="@aPkm.AV_SPA"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => aPkm.AV_SPA)"/>

                    <MudNumericField Label="Spd"
                                     Class="@GetStatClass(Stats.SpecialDefense)"
                                     T="@byte"
                                     title="Special Defense AV"
                                     Variant="@Variant.Outlined"
                                     Min="@byte.MinValue"
                                     Max="@AwakeningUtil.AwakeningMax"
                                     @bind-Value="@aPkm.AV_SPD"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => aPkm.AV_SPD)"/>

                    <MudNumericField Label="Spe"
                                     Class="@GetStatClass(Stats.Speed)"
                                     T="@byte"
                                     title="Speed AV"
                                     Variant="@Variant.Outlined"
                                     Min="@byte.MinValue"
                                     Max="@AwakeningUtil.AwakeningMax"
                                     @bind-Value="@aPkm.AV_SPE"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => aPkm.AV_SPE)"/>

                    <MudNumericField Label="Sum"
                                     title="AVs Total"
                                     Variant="@Variant.Outlined"
                                     Value="@aPkm.AwakeningSum()"
                                     ReadOnly
                                     HideSpinButtons/>

                </MudStack>
            </MudItem>
        }
        else if (Pokemon is IGanbaru gPkm)
        {
            <MudItem xs="3">
                <MudStack>
                    <MudText>
                        GVs
                    </MudText>

                    <MudNumericField Label="HP"
                                     T="@byte"
                                     title="HP GV"
                                     Variant="@Variant.Outlined"
                                     Min="@byte.MinValue"
                                     Max="@Pokemon.GetMaxGanbaru(0)"
                                     @bind-Value="@gPkm.GV_HP"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => gPkm.GV_HP)"/>

                    <MudNumericField Label="Atk"
                                     Class="@GetStatClass(Stats.Attack)"
                                     T="@byte"
                                     title="Attack GV"
                                     Variant="@Variant.Outlined"
                                     Min="@byte.MinValue"
                                     Max="@Pokemon.GetMaxGanbaru(1)"
                                     @bind-Value="@gPkm.GV_ATK"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => gPkm.GV_ATK)"/>

                    <MudNumericField Label="Def"
                                     Class="@GetStatClass(Stats.Defense)"
                                     T="@byte"
                                     title="Defense GV"
                                     Variant="@Variant.Outlined"
                                     Min="@byte.MinValue"
                                     Max="@Pokemon.GetMaxGanbaru(2)"
                                     @bind-Value="@gPkm.GV_DEF"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => gPkm.GV_DEF)"/>

                    <MudNumericField Label="Spa"
                                     Class="@GetStatClass(Stats.SpecialAttack)"
                                     T="@byte"
                                     title="Special Attack GV"
                                     Variant="@Variant.Outlined"
                                     Min="@byte.MinValue"
                                     Max="@Pokemon.GetMaxGanbaru(3)"
                                     @bind-Value="@gPkm.GV_SPA"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => gPkm.GV_SPA)"/>

                    <MudNumericField Label="Spd"
                                     Class="@GetStatClass(Stats.SpecialDefense)"
                                     T="@byte"
                                     title="Special Defense GV"
                                     Variant="@Variant.Outlined"
                                     Min="@byte.MinValue"
                                     Max="@Pokemon.GetMaxGanbaru(4)"
                                     @bind-Value="@gPkm.GV_SPD"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => gPkm.GV_SPD)"/>

                    <MudNumericField Label="Spe"
                                     Class="@GetStatClass(Stats.Speed)"
                                     T="@byte"
                                     title="Speed GV"
                                     Variant="@Variant.Outlined"
                                     Min="@byte.MinValue"
                                     Max="@Pokemon.GetMaxGanbaru(5)"
                                     @bind-Value="@gPkm.GV_SPE"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => gPkm.GV_SPE)"/>

                </MudStack>
            </MudItem>
        }
        else
        {
            <MudItem xs="3">
                <MudStack>
                    <MudText>
                        EVs
                    </MudText>

                    <MudNumericField Label="HP"
                                     title="HP EV"
                                     Variant="@Variant.Outlined"
                                     Min="@int.MinValue"
                                     Max="@GetEvMax(saveGeneration)"
                                     @bind-Value="@Pokemon.EV_HP"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => Pokemon.EV_HP)"/>

                    <MudNumericField Label="Atk"
                                     Class="@GetStatClass(Stats.Attack)"
                                     title="Attack EV"
                                     Variant="@Variant.Outlined"
                                     Min="@int.MinValue"
                                     Max="@GetEvMax(saveGeneration)"
                                     @bind-Value="@Pokemon.EV_ATK"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => Pokemon.EV_ATK)"/>

                    <MudNumericField Label="Def"
                                     Class="@GetStatClass(Stats.Defense)"
                                     title="Defense EV"
                                     Variant="@Variant.Outlined"
                                     Min="@int.MinValue"
                                     Max="@GetEvMax(saveGeneration)"
                                     @bind-Value="@Pokemon.EV_DEF"
                                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                     For="@(() => Pokemon.EV_DEF)"/>

                    @if (saveGeneration == 1 && Pokemon is PK1 pk1)
                    {
                        <MudNumericField Label="Spe"
                                         title="Speed EV"
                                         Variant="@Variant.Outlined"
                                         Min="@int.MinValue"
                                         Max="@GetEvMax(saveGeneration)"
                                         @bind-Value="@pk1.EV_SPE"
                                         @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                         For="@(() => pk1.EV_SPE)"/>

                        <MudNumericField Label="Spc"
                                         title="Special EV"
                                         Variant="@Variant.Outlined"
                                         Min="@int.MinValue"
                                         Max="@GetEvMax(saveGeneration)"
                                         @bind-Value="@pk1.EV_SPC"
                                         @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                         For="@(() => pk1.EV_SPC)"/>
                    }
                    else
                    {
                        <MudNumericField Label="Spa"
                                         Class="@GetStatClass(Stats.SpecialAttack)"
                                         title="Special Attack EV"
                                         Variant="@Variant.Outlined"
                                         Min="@int.MinValue"
                                         Max="@GetEvMax(saveGeneration)"
                                         @bind-Value="@Pokemon.EV_SPA"
                                         @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                         For="@(() => Pokemon.EV_SPA)"/>

                        <MudNumericField Label="Spd"
                                         Class="@GetStatClass(Stats.SpecialDefense)"
                                         title="Special Defense EV"
                                         Variant="@Variant.Outlined"
                                         Min="@int.MinValue"
                                         Max="@GetEvMax(saveGeneration)"
                                         @bind-Value="@Pokemon.EV_SPD"
                                         @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                         For="@(() => Pokemon.EV_SPD)"/>

                        <MudNumericField Label="Spe"
                                         Class="@GetStatClass(Stats.Speed)"
                                         title="Speed EV"
                                         Variant="@Variant.Outlined"
                                         Min="@int.MinValue"
                                         Max="@GetEvMax(saveGeneration)"
                                         @bind-Value="@Pokemon.EV_SPE"
                                         @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                                         For="@(() => Pokemon.EV_SPE)"/>

                        <MudNumericField Label="Sum"
                                         title="EVs Total"
                                         Variant="@Variant.Outlined"
                                         Value="@Pokemon.EVTotal"
                                         ReadOnly
                                         HideSpinButtons/>
                    }

                </MudStack>
            </MudItem>
        }

        <MudItem xs="3">
            <MudStack>
                <MudText>
                    Stats
                </MudText>

                <MudNumericField Label="HP"
                                 title="Max HP Stat"
                                 Variant="@Variant.Outlined"
                                 Value="@Pokemon.Stat_HPMax"
                                 ReadOnly
                                 HideSpinButtons/>

                <MudNumericField Label="Atk"
                                 Class="@GetStatClass(Stats.Attack)"
                                 title="Attack Stat"
                                 Variant="@Variant.Outlined"
                                 Value="@Pokemon.Stat_ATK"
                                 ReadOnly
                                 HideSpinButtons/>

                <MudNumericField Label="Def"
                                 Class="@GetStatClass(Stats.Defense)"
                                 title="Defense Stat"
                                 Variant="@Variant.Outlined"
                                 Value="@Pokemon.Stat_DEF"
                                 ReadOnly
                                 HideSpinButtons/>

                @if (saveGeneration == 1 && Pokemon is PK1 pk1)
                {
                    <MudNumericField Label="Spe"
                                     title="Speed Stat"
                                     Variant="@Variant.Outlined"
                                     Value="@pk1.Stat_SPE"
                                     ReadOnly
                                     HideSpinButtons/>

                    <MudNumericField Label="Spc"
                                     title="Special Stat"
                                     Variant="@Variant.Outlined"
                                     Value="@pk1.Stat_SPC"
                                     ReadOnly
                                     HideSpinButtons/>
                }
                else
                {
                    <MudNumericField Label="Spa"
                                     Class="@GetStatClass(Stats.SpecialAttack)"
                                     title="Special Attack Stat"
                                     Variant="@Variant.Outlined"
                                     Value="@Pokemon.Stat_SPA"
                                     ReadOnly
                                     HideSpinButtons/>

                    <MudNumericField Label="Spd"
                                     Class="@GetStatClass(Stats.SpecialDefense)"
                                     title="Special Defense Stat"
                                     Variant="@Variant.Outlined"
                                     Value="@Pokemon.Stat_SPD"
                                     ReadOnly
                                     HideSpinButtons/>

                    <MudNumericField Label="Spe"
                                     Class="@GetStatClass(Stats.Speed)"
                                     title="Speed Stat"
                                     Variant="@Variant.Outlined"
                                     Value="@Pokemon.Stat_SPE"
                                     ReadOnly
                                     HideSpinButtons/>
                }

                @if (saveGeneration >= 3)
                {
                    <MudText>
                        <MudText>
                            @Pokemon.GetPotentialString()
                        </MudText>
                    </MudText>
                }

            </MudStack>
        </MudItem>

    </MudGrid>

    <MudNumericField Label="Level"
                     Variant="@Variant.Outlined"
                     @bind-Value="@Pokemon.CurrentLevel"
                     @bind-Value:after="@(() => AppService.LoadPokemonStats(Pokemon))"
                     For="@(() => Pokemon.CurrentLevel)"/>

    @if (Pokemon is ICombatPower pb)
    {
        <MudNumericField Label="CP"
                         Variant="@Variant.Outlined"
                         ReadOnly
                         HideSpinButtons
                         Value="@pb.Stat_CP"
                         For="@(() => pb.Stat_CP)"/>
    }

    @if (saveGeneration >= 3)
    {
        <MudSelect Label="Nature"
                   Variant="@Variant.Outlined"
                   @bind-Value:get="@Pokemon.Nature"
                   @bind-Value:set="@OnNatureSet"
                   For="@(() => Pokemon.Nature)">
            @foreach (var nature in GameInfo.FilteredSources.Natures.DistinctBy(nature => nature.Value))
            {
                <MudSelectItem Value="@((Nature)nature.Value)"
                               @key="@nature.Value">
                    <MudStack Row>
                        <MudText>
                            @nature.Text
                        </MudText>
                        <MudText>
                            @AppService.GetStatModifierString((Nature)nature.Value)
                        </MudText>
                    </MudStack>
                </MudSelectItem>
            }
        </MudSelect>
    }

    @if (saveGeneration >= 8)
    {
        <MudSelect Label="Stat Nature"
                   Variant="@Variant.Outlined"
                   @bind-Value:get="@Pokemon.StatNature"
                   @bind-Value:set="@OnStatNatureSet"
                   For="@(() => Pokemon.StatNature)">
            @foreach (var nature in GameInfo.FilteredSources.Natures.DistinctBy(nature => nature.Value))
            {
                <MudSelectItem Value="@((Nature)nature.Value)"
                               @key="@nature.Value">
                    <MudStack Row>
                        <MudText>
                            @nature.Text
                        </MudText>
                        <MudText>
                            @AppService.GetStatModifierString((Nature)nature.Value)
                        </MudText>
                    </MudStack>
                </MudSelectItem>
            }
        </MudSelect>
    }

    @if (GameInfo.FilteredSources.Moves.Any(m => m.Value == (int)Move.HiddenPower) && Pokemon is not { Context: EntityContext.Gen8 or EntityContext.Gen9 })
    {
        <HiddenPowerChooser Pokemon="@Pokemon"/>
    }

    @if (saveGeneration >= 4)
    {
        <MudText>
            Characteristic: @GetCharacteristic(Pokemon)
        </MudText>
    }

    <MudGrid Spacing="1">
        @if (Pokemon is IDynamaxLevel d)
        {
            @if (d.CanHaveDynamaxLevel(Pokemon))
            {
                <MudItem xs="4"
                         xl="3">
                    <MudNumericField Label="Dynamax Level"
                                     T="@byte"
                                     Variant="@Variant.Outlined"
                                     Min="@byte.MinValue"
                                     Max="@Constants.MaxDynamaxLevel"
                                     @bind-Value="@d.DynamaxLevel"/>
                </MudItem>
                @if (Pokemon is IGigantamax c)
                {
                    <MudItem xs="3">
                        <MudCheckBox Label="Gigantamax"
                                     @bind-Value="@c.CanGigantamax"
                                     For="@(() => c.CanGigantamax)"/>
                    </MudItem>
                }
            }
        }

        @if (Pokemon is INoble noble)
        {
            <MudItem xs="3">
                <MudCheckBox Label="Noble"
                             @bind-Value="@noble.IsNoble"
                             For="@(() => noble.IsNoble)"/>
            </MudItem>
        }

        @switch (Pokemon)
        {
            case IAlpha alpha:
                <MudItem xs="3">
                    <MudCheckBox Label="Alpha"
                                 @bind-Value="@alpha.IsAlpha"
                                 For="@(() => alpha.IsAlpha)"/>
                </MudItem>
                break;
            case IAlphaReadOnly alphaReadOnly:
                <MudItem xs="3">
                    <MudCheckBox Label="Alpha"
                                 Value="@alphaReadOnly.IsAlpha"
                                 Readonly/>
                </MudItem>
                break;
        }

    </MudGrid>

    @if (Pokemon is ITeraType tt)
    {
        <MudGrid>
            <MudItem xs="9">
                <MudStack>
                    <MudSelect Label="Original Tera Type"
                               Variant="@Variant.Outlined"
                               @bind-Value="@tt.TeraTypeOriginal"
                               For="@(() => tt.TeraTypeOriginal)">
                        @foreach (var teraType in Enum.GetValues<MoveType>().Where(m => m != MoveType.Any))
                        {
                            var teraTypeId = (byte)teraType;
                            <MudSelectItem Value="@teraType"
                                           @key="@teraType">
                                <MudStack Row
                                          Class="my-2"
                                          AlignItems="@AlignItems.Center">
                                    @RenderTeraTypeImage(teraTypeId)
                                    <MudText>
                                        @GetTeraTypeDisplayName(teraTypeId)
                                    </MudText>
                                </MudStack>
                            </MudSelectItem>
                        }
                        <MudSelectItem Value="@((MoveType)TeraTypeUtil.Stellar)"
                                       @key="@((MoveType)TeraTypeUtil.Stellar)">
                            <MudStack Row
                                      Class="my-2"
                                      AlignItems="@AlignItems.Center">
                                @RenderTeraTypeImage(TeraTypeUtil.Stellar)
                                <MudText>
                                    @GetTeraTypeDisplayName(TeraTypeUtil.Stellar)
                                </MudText>
                            </MudStack>
                        </MudSelectItem>
                    </MudSelect>
                    <MudSelect Label="Override Tera Type"
                               Variant="@Variant.Outlined"
                               @bind-Value="@tt.TeraTypeOverride"
                               For="@(() => tt.TeraTypeOverride)">
                        <MudSelectItem Value="@((MoveType)TeraTypeUtil.OverrideNone)"
                                       @key="@TeraTypeUtil.OverrideNone">
                            <MudText>
                                @Constants.EmptyIndex
                            </MudText>
                        </MudSelectItem>
                        @foreach (var teraType in Enum.GetValues<MoveType>().Where(m => m != MoveType.Any))
                        {
                            var teraTypeId = (byte)teraType;
                            <MudSelectItem Value="@teraType"
                                           @key="@teraType">
                                <MudStack Row
                                          Class="my-2"
                                          AlignItems="@AlignItems.Center">
                                    @RenderTeraTypeImage(teraTypeId)
                                    <MudText>
                                        @GetTeraTypeDisplayName(teraTypeId)
                                    </MudText>
                                </MudStack>
                            </MudSelectItem>
                        }
                        <MudSelectItem Value="@((MoveType)TeraTypeUtil.Stellar)"
                                       @key="@((MoveType)TeraTypeUtil.Stellar)">
                            <MudStack Row
                                      Class="my-2"
                                      AlignItems="@AlignItems.Center">
                                @RenderTeraTypeImage(TeraTypeUtil.Stellar)
                                <MudText>
                                    @GetTeraTypeDisplayName(TeraTypeUtil.Stellar)
                                </MudText>
                            </MudStack>
                        </MudSelectItem>
                    </MudSelect>
                </MudStack>
            </MudItem>
            <MudItem xs="3"
                     Style="align-self: center;">
                <MudStack>
                    <MudText Align="@Align.Center">
                        Current Tera Type: @GetTeraTypeDisplayName((byte)tt.TeraType)
                    </MudText>
                    <div class="current-tera-type-image">
                        @RenderTeraTypeImage((byte)tt.TeraType, 60)
                    </div>
                </MudStack>
            </MudItem>
        </MudGrid>
    }
}


@code {

    private RenderFragment RenderTeraTypeImage(byte teraTypeid, int width = 30) =>
        @<MudImage Src="@SpriteHelper.GetTypeGemSpriteFileName(teraTypeid)"
                   Alt="@GetTeraTypeDisplayName(teraTypeid)"
                   title="@GetTeraTypeDisplayName(teraTypeid)"
                   ObjectFit="@ObjectFit.Contain"
                   ObjectPosition="@ObjectPosition.Center"
                   Width="@width"/>;

}
